CREATE TABLE CLIENTES(
ID INT8,
NOME VARCHAR(40),
SALDO FLOAT4);

SELECT * FROM CLIENTES;

INSERT INTO CLIENTES VALUES(20193017789,'GABRIEL SABASTIAO DO NASCIMENTO NETO',1000);
INSERT INTO CLIENTES VALUES(20193017831,'MARIA CLARA DE CARVALHO ALMEIDA',1500);
INSERT INTO CLIENTES VALUES(20193017187,'MARIA EDUARDA MENDES DOS SANTOS',2000);
INSERT INTO CLIENTES VALUES(20193017850,'MARIA LETICIA DELMIRO DA SILVA',2000);
INSERT INTO CLIENTES VALUES(20193017920,'ROMULO FELIPE BEZERRA FRANCA DA SILVA',1000);





CREATE TABLE CONTAS(
ID INT8,
DESCRICAO VARCHAR(18),/*o tipo de pagamento: crédito, debito etc.*/
SALDO FLOAT4);

SELECT * FROM CONTAS;

INSERT INTO CONTAS VALUES(20193017789,'UNIVERSITARIA',1000);
INSERT INTO CONTAS VALUES(20193017831,'CORRENTE',1500);
INSERT INTO CONTAS VALUES(20193017187,'SALARIO',2000);
INSERT INTO CONTAS VALUES(20193017850,'DIGITAL',2000);
INSERT INTO CONTAS VALUES(20193017920,'POUPANCA',1000);





CREATE TABLE MOVIMENTOS(
ID INT8,
HISTORICO VARCHAR(100),/*o que ele passou ou comprou*/
DEBITO FLOAT4,
CREDITO FLOAT4);


SELECT * FROM MOVIMENTOS;


INSERT INTO MOVIMENTOS VALUES(20193017789,'COMPROU ACER GX-783-BR13', 500.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017789,'COMPROU MOUSE SEM FIO MODERNO USB', 25.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017789,'VENDEU SANDISK ULTRA FIT USB 3.0', 0, 51.92);
INSERT INTO MOVIMENTOS VALUES(20193017789,'COMPROU MESA DE ESCRITORIO ESPANHA 2 PT 3 GV PRETO', 0, 299.89);
INSERT INTO MOVIMENTOS VALUES(20193017789,'COMPROU CADEIRA ESCRITORIO NEW ERDON PRESIDENTE ERGONOMICA', 115.99, 0);



INSERT INTO MOVIMENTOS VALUES(20193017831,'VENDEU CALCA FEMININA JOGGER FAIXA LATERAL LISTRA ANITTA',44.99,0);
INSERT INTO MOVIMENTOS VALUES(20193017831,'COMPROU TINTA DE CABELO MAXTON SE JOGA! PINK WISH 120G', 12.30, 0);
INSERT INTO MOVIMENTOS VALUES(20193017831,'VENDEU TENIS FEMININA SOLA BRILHANTE PRETO', 120.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017831,'COMPROU CONJUNTO MALAS VIAGEM YINS BRASIL ABS P/M RODIMHAS', 489.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017831,'COMPROU PASSAGEM PARA NEW YORK', 0, 830.00);



INSERT INTO MOVIMENTOS VALUES(20193017187,'COMPROU KIT OLSA BOLSA MAO', 179.99, 0);
INSERT INTO MOVIMENTOS VALUES(20193017187,'COMPROU VESTIDO DE FESTA MARSALA', 350.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017187,'COMPROU SALTO AGULHA BOMBAS FECHADOS COM SALTO DE JOIAS SAPATOS', 165.37, 0);
INSERT INTO MOVIMENTOS VALUES(20193017187,'PAGOU A MAQUIADORA', 120.00, 0);
INSERT INTO MOVIMENTOS VALUES(20193017187,'ALUGOU O ESPACO BUFFET FASANO', 0, 1100.00);



INSERT INTO MOVIMENTOS VALUES(20193017850,'PAGOU A LUZ','130.89','0');
INSERT INTO MOVIMENTOS VALUES(20193017850,'COMPROU UM CARRO','0','789.80');
INSERT INTO MOVIMENTOS VALUES(20193017850,'COMPROU UMA BICICLETA ROSA','300.00','0');
INSERT INTO MOVIMENTOS VALUES(20193017850,'COMPROU UMA PULSEIRA','2.99','0');
INSERT INTO MOVIMENTOS VALUES(20193017850,'COMPROU UMA MUDA DE MORANGO','15.67','0');



INSERT INTO MOVIMENTOS VALUES(20193017920,'COMPROU UMA MESA MODERNA','0','200.00');
INSERT INTO MOVIMENTOS VALUES(20193017920,'COMPROU UM SANDUICHE','15.00','0');
INSERT INTO MOVIMENTOS VALUES(20193017920,'ALUGOU UM CARRO','0','400.00');
INSERT INTO MOVIMENTOS VALUES(20193017920,'COMPROU UM REFRIGERANTE','3.99','0');
INSERT INTO MOVIMENTOS VALUES(20193017920,'COMPROU UM BISCOITO','2.99','0');






-- INCREMENTA
CREATE FUNCTION incrementar(INTEGER) RETURNS INTEGER AS 'SELECT $1 + 1 ;'
LANGUAGE 'sql';

select incrementar(3)

SELECT * FROM pg_language;


SELECT proname, prosrc FROM pg_proc;-- Lista das linguagens disponíveis.
 

SELECT incrementar(10);-- Lista das funções armazenadas no PostgreSQL;

DROP FUNCTION incrementar(INTEGER)

-- RETORNA O NÚMERO DE CONTAS QUE UM DETERMINADO CLIENTE POSSUI
CREATE FUNCTION ncontas(INTEGER) RETURNS INT8 AS 'SELECT COUNT(*) FROM CONTAS WHERE ID = $1;'
LANGUAGE 'sql';
SELECT ncontas(2);

-- INSERE DADOS REFERENTES AO CLIENTE E SUA CONTA,
RETORNANDO O ID DO CLIENTE INSERIDO
CREATE FUNCTION cliente_contadesc(VARCHAR(30),
 VARCHAR(30))
 
 
 RETURNS INT8 AS 'INSERT INTO clientes(nome) VALUES($1);
 INSERT INTO contas(id, descricao) VALUES(CURRVAL(''clientes_id_seq''),$2);
 SELECT CURRVAL(''clientes_id_seq'');'  
LANGUAGE 'sql';
SELECT cliente_contadesc('SILVIO','SEMANA04');

-- ID DOS CLIENTES COM SALDO NEGATIVO
CREATE FUNCTION quemdeve()
RETURNS SETOF INTEGER AS 'SELECT clientes.id FROM clientes INNER JOIN contas ON clientes.id = contas.fkcliente INNER JOIN movimentos ON contas.id = movimentos.fkconta GROUP BY clientes.id  
HAVING SUM(movimentos.credito - movimentos.debito) < 0;'  
LANGUAGE 'sql';
SELECT quemdeve();


CREATE FUNCTION devedores()
 RETURNS SETOF clientes AS 'SELECT * FROM clientes WHERE id IN
 (SELECT clientes.id FROM clientes INNER JOIN contas ON clientes.id = contas.fkcliente INNER JOIN movimentos ON contas.id = movimentos.fkconta GROUP BY clientes.id
   HAVING SUM(movimentos.credito - movimentos.debito) < 0);'  
LANGUAGE 'sql';

-- RETORNA DADOS DOS CLIENTES QUE POSSUEM O MOVIMENTO CRÉDITO MAIOR OU IGUAL AO VALOR PASSADO COMO PARÂMETRO
 CREATE FUNCTION MaioresClientes(NUMERIC(15,2))
  RETURNS SETOF clientes AS 'SELECT * FROM clientes WHERE id IN
  (SELECT clientes.id FROM clientes INNER JOIN contas ON clientes.id = contas.fkcliente INNER JOIN movimentos ON contas.id = movimentos.fkconta GROUP BY clientes.id
  HAVING SUM(movimentos.credito) >= $1);'
 LANGUAGE 'sql';

 -- LISTAGEM DOS CLIENTES QUE MOVIMENTARAM MAIS DE 10000
 select id, nome from MaioresClientes (10000);

 SELECT proname, prosrc FROM pg_proc